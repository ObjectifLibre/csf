// This file is automatically generated by qtc from "new.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line templates/new.qtpl:1
package templates

//line templates/new.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line templates/new.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line templates/new.qtpl:1
func StreamNewReaction(qw422016 *qt422016.Writer, eventsources []string, actions []string) {
	//line templates/new.qtpl:1
	qw422016.N().S(`
<!DOCTYPE html>
<html>
  <head>
    <title>CSF Web UI</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/static/css/uikit.min.css" />
    <script src="/static/js/uikit.min.js"></script>
    <script src="/static/js/uikit-icons.min.js"></script>
  </head>
  <body class="uk-background-secondary uk-light">
    <p class="uk-text-center uk-padding uk-text-lead">Add new Reaction</p>
    <div class="uk-text-center"  uk-grid>
      <div class="uk-width-1-3@m uk-width-1-1">
	<p>Event source</p>
	<form id="42" action="/confignew" method="get">
	  <select required name="ds" class="uk-width-3-4 uk-select">
	    `)
	//line templates/new.qtpl:19
	for _, ds := range eventsources {
		//line templates/new.qtpl:19
		qw422016.N().S(`
	    <option value="`)
		//line templates/new.qtpl:20
		qw422016.E().S(ds)
		//line templates/new.qtpl:20
		qw422016.N().S(`">`)
		//line templates/new.qtpl:20
		qw422016.E().S(ds)
		//line templates/new.qtpl:20
		qw422016.N().S(`</option>
	    `)
		//line templates/new.qtpl:21
	}
	//line templates/new.qtpl:21
	qw422016.N().S(`
          </select>
	</form>
      </div>
      <div class="uk-width-1-3@m uk-width-1-1 uk-text-center">
	<span class="uk-visible@m" uk-icon="icon: arrow-right"></span>
	<span class="uk-hidden@m" uk-icon="icon: arrow-down"></span>
      </div>
      <div class="uk-width-1-3@m uk-width-1-1">
	<p>Action</p>
	  <select required name="act" form="42" class="uk-width-3-4 uk-select">
	    `)
	//line templates/new.qtpl:32
	for _, act := range actions {
		//line templates/new.qtpl:32
		qw422016.N().S(`
	    <option value="`)
		//line templates/new.qtpl:33
		qw422016.E().S(act)
		//line templates/new.qtpl:33
		qw422016.N().S(`">`)
		//line templates/new.qtpl:33
		qw422016.E().S(act)
		//line templates/new.qtpl:33
		qw422016.N().S(`</option>
	    `)
		//line templates/new.qtpl:34
	}
	//line templates/new.qtpl:34
	qw422016.N().S(`
          </select>
      </div>
    </div>
    <p></p>
    <button class="uk-button uk-button-primary uk-align-center" type="submit" form="42">Go!</button>
    <div class="uk-flex uk-flex-center uk-flex-middle uk-background-secondary uk-light" uk-height-viewport="expand: true">
      <div class="uk-position-bottom-center uk-position-small">
	<span class="uk-text-small uk-text-muted">CSF - Continuous Security Framework</span>
      </div>
    </div>
</body>
</html>
`)
//line templates/new.qtpl:47
}

//line templates/new.qtpl:47
func WriteNewReaction(qq422016 qtio422016.Writer, eventsources []string, actions []string) {
	//line templates/new.qtpl:47
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line templates/new.qtpl:47
	StreamNewReaction(qw422016, eventsources, actions)
	//line templates/new.qtpl:47
	qt422016.ReleaseWriter(qw422016)
//line templates/new.qtpl:47
}

//line templates/new.qtpl:47
func NewReaction(eventsources []string, actions []string) string {
	//line templates/new.qtpl:47
	qb422016 := qt422016.AcquireByteBuffer()
	//line templates/new.qtpl:47
	WriteNewReaction(qb422016, eventsources, actions)
	//line templates/new.qtpl:47
	qs422016 := string(qb422016.B)
	//line templates/new.qtpl:47
	qt422016.ReleaseByteBuffer(qb422016)
	//line templates/new.qtpl:47
	return qs422016
//line templates/new.qtpl:47
}
